url = "/news/:id?|[a-zA-Z\-0-9]"
layout = "default"
title = "News"
is_hidden = 0
robot_index = "index"
robot_follow = "follow"

[article_galleries]

==
<?php
use Pensoft\Articles\Models\Article;

function urlencode($string){
    return trim(urlencode($string));
}
function onStart()
{
$this['records'] = Article::news()->where('published_at', '<=', 'now()')->where('published', 'true')->orderBy('published_at', 'DESC')->paginate(15, ['*'], 'p');

    $this['article'] = Pensoft\Articles\Models\Article::where('slug', $this->param('id'))->where('published', 'true')->first();
    if($this['article']){

        $this['is_detail_page'] = $this['article'] ? true : false;
        if($this['is_detail_page']){
            $this['page_url'] = $this->pageUrl('');
            $this['encoded_title'] = urlencode($this['article']['title']);
            $this['slug'] = $this['article']['slug'];
            
            $seoTitle = $this['article']['title'];
            $seoKeywords = $this['article']['meta_keywords'] ?: $this['article']['keywords'];
            $seoDescription = str_limit(Html::strip($this['article']['content']), 255);
    
            if (class_exists('\BennoThommo\Meta\Meta')) {
                if($seoTitle) {
                    \BennoThommo\Meta\Meta::set('title', $seoTitle);
                }
                if($seoKeywords) {
                    \BennoThommo\Meta\Meta::set('keywords', $seoKeywords);
                }
                if($seoDescription) {
                    \BennoThommo\Meta\Meta::set('description', $seoDescription);
                }
            }
            
            \BennoThommo\Meta\Meta::set('twitter:card', 'summary_large_image');
            \BennoThommo\Meta\Meta::set('twitter:title', $this['article']['title']);
            \BennoThommo\Meta\Meta::set('twitter:description', str_limit(Html::strip($this['article']['content']), 255));
            
            \BennoThommo\Meta\Meta::set('og:title', $this['article']['title']);
            \BennoThommo\Meta\Meta::set('og:description', str_limit(Html::strip($this['article']['content']), 255));
            \BennoThommo\Meta\Meta::set('og:type', 'article');
            \BennoThommo\Meta\Meta::set('og:url', $this->pageUrl(''));
    
            if($this['article']['cover']){
                \BennoThommo\Meta\Meta::set('twitter:image', $this['article']['cover']->getThumb(600, null, ['mode' => 'auto']));
        
                \BennoThommo\Meta\Meta::set('og:image', $this['article']['cover']->getThumb(600, 314, ['mode' => 'crop']));
                \BennoThommo\Meta\Meta::set('og:image:width', 600);
                \BennoThommo\Meta\Meta::set('og:image:height', 314);
            }
        }
    }
    

if($this['is_detail_page']){
$related = array();
if($this['article']['slug']){
$article = Article::where('slug', $this['article']['slug'])->first();
$arrayOfTags = explode(",", $article->keywords);

$related = Article::where('slug', '!=', $this['article']['slug']);

$orWhere = '( ';
$c = 1;

foreach($arrayOfTags as $tag){
$orWhere .= ' keywords ILIKE \'%'.trim($tag).'%\' ';
if($c < count($arrayOfTags)){
$orWhere .= ' or ';
}
$c++;
}
$orWhere .= ')';
$related = $related
->whereRaw($orWhere)
->limit(2)
->get();

$this['related'] = $related;
}
}
}
?>
==
<div class="container">
	{% if is_detail_page %}
    <div class="row single-news-item">
        <div class="col-xs-12 col-md-7">
            <div class="news_content_wrapper">
                <div class="news-title">
                    <h1 class="single-new-title">{{article.title}}</h1>
                </div>
                <div class="text-published">{{article.pretty_published_at}}</div>
                <div class="content">
                    {{article.content|raw}}
                </div>

            </div>
        </div>
        <div class="col-xs-12 col-md-5">
            {% if article.cover %}
            <div class="row center-xs">
                <img class="content left" src="{{ article.cover|crop_image|resize(673, auto, { mode: 'crop' }) }}" />
                {% if article.caption %}
                {{article.caption|raw}}
                {% endif %}
            </div>
            {% endif %}

            <div class="row share_container middle-xs">
                <div class="col-xs-2 start-xs">Share</div>
                <div class="col-xs-10">
                    <a href="http://twitter.com/share?text={{article.title}}&url={{page_url}}" target="_blank" class="btn p-primary pr p-twitter normal"></a>

                    <a href="https://www.facebook.com/sharer/sharer.php?u={{page_url}}&amp;src=sdkpreparse" target="_blank" class="btn pr p-primary p-facebook normal"></a>

                    <a href="https://www.linkedin.com/sharing/share-offsite/?url={{page_url}}" target="_blank" class="btn pr p-primary p-linkedin normal"></a>

                </div>
            </div>
        </div>
        <div class="row image-gallery-container">
            <div class="image-gallery">
                {% component 'article_galleries' %}
            </div>
        </div>
    </div>
	{% else %}

            <div class="tabs">
                <a class="active">News</a>
                <a href="{{'events'|page}}">Events</a>
            </div>
            <div class="row newslist">
                {% for highlight in records %}
                <div class="col-xs-12 col-md-4 news-item">
                    <a href="{{'news'|page}}/{{highlight.slug}}">
                    <div class="row news_column">
                        <img class="news-img-top" src="{{ highlight.cover|crop_image|resize(393, 223, {'mode': 'crop'}) }}">

                        <div class="news-container col-xs-12">
                            <div class="text-published">{{highlight.pretty_published_at}}</div>
                            <div class="wrapper">
                                <div class="news-title">
                                    <h3 class="card-title">{{ highlight.title|length > 200 ? highlight.title|striptags|slice(0, 200)|raw|replace({"&nbsp;": " ", ".": ". "}) ~ '...' : highlight.title|raw  }}</h3>
                                </div>
                                <div class="body mb-2">{{ highlight.content|length > 200 ? highlight.content|raw|replace({'&nbsp;': ' ', '.': '. '})|striptags|slice(0, 200) ~ '...' : highlight.content|raw|replace({'&nbsp;': ' ', '.': '. '})  }}</div>
                            </div>
                            <a href="{{'news'|page}}/{{highlight.slug}}" class="read_more">Learn more</a>
                        </div>
                    </div>
                    </a>
                </div>
                {% endfor %}
            </div>
            <div class="row container">
                {{ records.render|raw }}
            </div>

	{% endif %}
</div>
<script>
    // Object to keep track of the current slide index for each gallery
    var slideIndex = {};

    // Function to initialize the slide index for all galleries
    function initGalleries() {
        $('.gallery_container').each(function() {
            var id = this.id.split('_')[1];
            slideIndex[id] = 1;
            showSlides(1, id); // Show the first slide for each gallery
        });
    }

    // Function to increment/decrement the current slide index and display the slide
    function plusSlides(n, galleryId) {
        showSlides(slideIndex[galleryId] += n, galleryId);
    }

    // Function to display the current slide based on the thumbnail clicked
    function currentSlide(n, galleryId) {
        showSlides(slideIndex[galleryId] = n, galleryId);
    }

    // Main function to display slides
    function showSlides(n, galleryId) {
        var i;
        var gallery = $("#gallery_" + galleryId);
        var slides = gallery.find(".mySlides_" + galleryId);
        var dots = gallery.find(".demo_" + galleryId);
        var captionText = gallery.find("#caption_" + galleryId);

        if (n > slides.length) { slideIndex[galleryId] = 1 }
        if (n < 1) { slideIndex[galleryId] = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";  
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex[galleryId]-1].style.display = "block";  
        dots[slideIndex[galleryId]-1].className += " active";
        captionText.html(dots[slideIndex[galleryId]-1].alt);
    }

    // Initialize galleries when the document is ready
    $(document).ready(function() {
        initGalleries();
    });
</script>